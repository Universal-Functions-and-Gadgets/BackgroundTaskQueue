name: Publish Nuget Package

on:
  release:
    types: [published]
    
jobs:
  pack:
    runs-on: ubuntu-latest
    env:
      Solution_Name: BackgroundTaskQueue.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: global.json
      
    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: dotnet restore ./${{ env.Solution_Name }}

    # Create the app package by building and packaging the Windows Application Packaging project
    - name: Create the app package
      run: dotnet pack ./${{ env.Solution_Name }} -c Release

    - uses: actions/upload-artifact@v4
      with:
        name: nuget-packages-${{ github.ref_name }}
        path: src/UFG.BackgroundTaskQueue/bin/Release/**/*.nupkg
        retention-days: 1

  publish_to_nuget:
    needs:
      - pack
    runs-on: ubuntu-latest
    env:
      Solution_Name: BackgroundTaskQueue.sln

    strategy:
      fail-fast: false
      matrix:
        dotnet-version: [ 'net6.0', 'net8.0', 'net9.0' ]

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: nuget-packages-${{ github.ref_name }}

    - name: Upload Nuget Package
      env:
        API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: dotnet nuget push ./src/UFG.BackgroundTaskQueue/bin/Release/${{ matrix.dotnet-version }}/UFG.BackgroundTaskQueue.${{  github.ref_name }}.nupkg --api-key ${{ env.API_KEY }} --source https://api.nuget.org/v3/index.json
